apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-configmap
data:
  envoy.yaml: |-
    admin:
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }

    static_resources:
      listeners:
      - name: https_listener
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 50000

        listener_filters:
        - name: "single_tls_inspector"
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
        per_connection_buffer_limit_bytes: 32768  # 32 KiB
        filter_chains:
        {{- $domainRegion := .Values.domainRegion -}}
        {{- if .Values.parent.enabled }}
        - filter_chain_match:
            server_names:
              {{- range $key, $val := .Values.arcDomainNames }}
              - {{ $val }}
              {{- end }}
              {{- range $key, $val := .Values.arcRegionalDomains }}
              - {{ $domainRegion -}} {{ $val }}
              {{- end }}
              {{- range $key, $val := .Values.customDomains }}
              - {{ $val }}
              {{- end }}
          filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                cluster: parent-passthrough
                stat_prefix: parent_passthr
        {{- else }}
        {{- range $key, $val := .Values.arcDomainNames }}
        - filter_chain_match:
            server_names:
              - {{ $val }}
          filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                cluster: {{ $key }}
                stat_prefix: {{ $key }}_passthr
        {{- end }}
        {{- range $key, $val := .Values.arcRegionalDomains }}
        - filter_chain_match:
            server_names:
              - {{ $domainRegion -}} {{ $val }}
          filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                cluster: {{ $key }}
                stat_prefix: {{ $key }}_passthr
        {{- end }}
        {{- range $key, $val := .Values.customDomains }}
        - filter_chain_match:
            server_names:
              - {{ $val }}
          filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                cluster: {{ $key }}
                stat_prefix: {{ $key }}_passthr
        {{- end }}
        {{- end }}
        # - filter_chain_match:
        #     server_names:
        #       - "*.azurewebsites.net"
        #   filters:
        #     - name: envoy.filters.network.tcp_proxy
        #       typed_config:
        #         "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        #         cluster: azwebsitesnet
        #         stat_prefix: fw_passthr
        #       sub_filters:
        #         - name: envoy.lua
        #           typed_config:
        #             "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
        #             inline_code: |
        #               function envoy_on_request(request_handle)
        #                 local headers = request_handle:headers()
        #                 local host = headers:get(":authority")

        #                 local load_assignment = request_handle:metadata():mutable_filter_metadata():get_mutable_fields()["envoy.transport_sockets.upstream"].fields["load_assignment"].list_value.values[1].struct_value

        #                 local socket_address = load_assignment.fields["endpoints"].list_value.values[1].struct_value.fields["lb_endpoints"].list_value.values[1].struct_value.fields["endpoint"].struct_value.fields["address"].struct_value.fields["socket_address"].struct_value

        #                 socket_address.address = host:gsub(".*%.(.*)", "%1")
        #               end

      clusters:
      {{- if .Values.parent.enabled }}
      # If child layer point to parent proxy entrypoint
      - name: parent-passthrough
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        load_assignment:
          cluster_name: parent-passthrough
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.parent.proxyIp }}
                    port_value: {{ .Values.parent.proxyHttpsPort }}
      {{- else }}
      # else if this is top layer point to outbound public URIs
      {{- $httpsPort := .Values.parent.proxyHttpsPort -}}
      {{- range $key, $val := .Values.arcDomainNames }}
      - name: {{ $key }}
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        load_assignment:
          cluster_name: {{ $key }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ $val }}
                    port_value: {{ $httpsPort }}
      {{- end }}
      {{- range $key, $val := .Values.arcRegionalDomains }}
      - name: {{ $key }}
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        load_assignment:
          cluster_name: {{ $key }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ $domainRegion -}} {{ $val }}
                    port_value: {{ $httpsPort }}
      {{- end }}
      {{- range $key, $val := .Values.customDomains }}
      - name: {{ $key }}
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        load_assignment:
          cluster_name: {{ $key }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ $val }}
                    port_value: {{ $httpsPort }}
      {{- end }}
      {{- end }}

      - name: azwebsitesnet
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: azwebsitesnet
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: "168.63.129.16" #TODO
                    port_value: 443
        dns_lookup_family: V4_ONLY
        common_http_protocol_options:
          idle_timeout: 60s

    layered_runtime:
      layers:
      - name: static_layer_0
        static_layer:
          overload:
            global_downstream_max_connections: 50000